🌀 Manifest Projektu: LuxDB MVP
„Nie relacja. Nie dokument. Ewolucja danych.”
📌 Cel projektu
Zbudować system bazodanowy nowego typu – LuxDB – oparty na genotypowym modelu danych, gdzie:

dane nie są tylko strukturą, ale reprezentacją intencji,

każdy byt (Being) wynika z duszy (Soul) — czyli genotypu złożonego z atrybutów, relacji, logiki,

system uczy się i adaptuje, nie tylko przechowuje dane.

🛠️ Filary Techniczne MVP
Backend: Python 3.11, FastAPI, async PostgreSQL
Repozytoria:

BeingRepository – obsługa bytów

SoulRepository – obsługa genotypów

DynamicRepository – zapis i odczyt danych dynamicznych, przypisanych do bytów
Architektura danych:

Tabele dynamiczne tworzą się na podstawie typu danych (text, int, vector, jsonb, list, boolean)

Wartości atrybutów są mapowane, serializowane i przechowywane zgodnie z genotypem

System przewiduje indeksowanie, transakcje, ograniczenia populacyjne, a w przyszłości relacje między bytami

✨ Cechy MVP
Funkcja	Opis
🧬 Definicja genotypu	Genotyp (genotype) opisuje zestaw atrybutów i ich typy
🧠 Tworzenie duszy	Soul reprezentuje genotyp, ma hash, alias, ulid
👤 Tworzenie bytu	Being to instancja genotypu, dynamicznie rozszerzany o jego cechy
🔄 Zapis danych	Wszystkie dane zapisują się w odpowiednich dynamicznych tabelach
🔍 Odczyt danych	System sam wie, gdzie szukać danych – pełna dekonstrukcja typu
🚫 Limit populacyjny	Można ograniczyć ilość bytów na jeden Soul (np. max: 1)

🔥 Przeznaczenie LuxDB
Do budowania agentów AI z unikalnymi cechami

Do przechowywania semantycznych danych i relacji bytów

Jako warstwa pośrednia dla systemów rozproszonych, personalizowanych, ewolucyjnych

🧱 MVP w Replit
W wersji demonstracyjnej:

Inicjalizujesz genotyp (Soul) poprzez JSON

Tworzysz byty (Being) — które przypisują się do duszy

Każdy byt rozwija się dynamicznie zgodnie z genotypem

Możesz zapisywać/odczytywać dane przez proste endpointy REST

W przyszłości: pełne WS, embedded vector search, logiczne operacje na bytach

🌍 Dostępność
Na tym etapie:

Kod nie jest publiczny

MVP działa jako demo na Replit + Vercel (frontend później)

Użytkownicy mogą uzyskać dostęp do wybranych funkcji po kontakcie z twórcą

🚀 Dlaczego LuxDB?
Nie jest to kolejna baza danych

To język relacji i intencji

Zbudowany z potrzeby, nie z briefu

Rozwijany przez jedną osobę + AI

Gotowy na przyszłość, gdzie dane będą żywe i semantyczne