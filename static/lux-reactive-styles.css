
/* ===== LUX REACTIVE STYLES ===== */

.notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 12px 20px;
    border-radius: 6px;
    color: white;
    font-weight: 500;
    z-index: 1000;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.notification-success {
    background: #4CAF50;
}

.notification-error {
    background: #f44336;
}

.notification-info {
    background: #2196F3;
}

.notification.show {
    transform: translateX(0);
}

.node-item {
    padding: 8px 12px;
    margin: 4px 0;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease;
    border-left: 3px solid transparent;
}

.node-item:hover {
    background: rgba(255, 255, 255, 0.2);
    border-left-color: #00ff88;
    transform: translateX(2px);
}

.node-item.selected {
    background: rgba(0, 255, 136, 0.2);
    border-left-color: #00ff88;
}

.node-type {
    font-size: 0.8em;
    opacity: 0.7;
    margin-left: 8px;
    padding: 2px 6px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
}

.reactive-container {
    position: relative;
    overflow: hidden;
}

.reactive-container.updating::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #00ff88, transparent);
    animation: loading-sweep 1s ease-in-out;
}

@keyframes loading-sweep {
    0% { left: -100%; }
    100% { left: 100%; }
}

.stat-value {
    transition: all 0.3s ease;
}

.stat-value.updating {
    transform: scale(1.1);
    color: #00ff88;
}

.connection-status {
    transition: all 0.3s ease;
}

.connection-status.connected {
    background: rgba(76, 175, 80, 0.2);
    color: #4CAF50;
    border: 1px solid rgba(76, 175, 80, 0.3);
}

.connection-status.disconnected {
    background: rgba(244, 67, 54, 0.2);
    color: #f44336;
    border: 1px solid rgba(244, 67, 54, 0.3);
}

.reactive-fade-in {
    animation: fadeIn 0.3s ease-out;
}

.reactive-fade-out {
    animation: fadeOut 0.3s ease-in;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeOut {
    from { opacity: 1; transform: translateY(0); }
    to { opacity: 0; transform: translateY(-10px); }
}
